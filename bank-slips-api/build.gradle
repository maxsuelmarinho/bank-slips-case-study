buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("se.transmode.gradle:gradle-docker:1.2")
        classpath("net.researchgate:gradle-release:2.6.0")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'net.researchgate.release'
apply plugin: "docker"
apply plugin: "findbugs"
apply plugin: "jacoco"

group = 'com.marinho.bankslips'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

ext {
    junitJupiterVersion = "5.3.+"
    mockitoVersion = "2.22.+"
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-hateoas')

    compile('org.modelmapper:modelmapper:2.2.0')

    compile('org.liquibase:liquibase-core')
    compile('org.hibernate:hibernate-java8:5.1.0.Final')

    compileOnly("org.projectlombok:lombok:1.18.2")

    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('com.h2database:h2')

    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
    testCompile("org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion")
    testCompile("org.mockito:mockito-core:$mockitoVersion")
    testCompile("org.mockito:mockito-junit-jupiter:$mockitoVersion")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("com.github.javafaker:javafaker:0.16")
}

jar {
    baseName = 'bank-slip-api'
}

release {
    failOnCommitNeeded = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true

    scmAdapters = [net.researchgate.release.GitAdapter]

    git {
        requireBranch = "master"
        pushToRemote = "origin"
    }
}

task dockerImage(type: Docker) {
    def buildNumber = System.getenv('BUILD_NUMBER')

    push = Boolean.getBoolean('docker.push')

    tagVersion = buildNumber ? "${project.version.replaceAll('-SNAPSHOT', '')}.${buildNumber}" : "${project.version.replaceAll('-SNAPSHOT', '')}"
    registry = 'maxsuelmarinho'
    applicationName = 'bank-slips-api'

    dockerfile = file('src/main/docker/Dockerfile')

    doFirst {
        copy {
            from jar
            into stageDir
        }
        copy {
            from file('src/main/docker/docker-entrypoint.sh')
            into stageDir
        }
    }
}

dockerImage.dependsOn 'assemble'

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

findbugs {
    ignoreFailures true
    effort "max"
    reportLevel "high"
}

test.finalizedBy jacocoTestReport
